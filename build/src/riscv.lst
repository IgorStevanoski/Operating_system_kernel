GAS LISTING /tmp/cch4yKO8.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB40:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** void Riscv::popSppSpie()
  11:src/riscv.cpp **** {
  12              		.loc 1 11 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 12 5
  21              		.loc 1 12 39 is_stmt 0
  22              	#APP
  23              	# 12 "src/riscv.cpp" 1
  13              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 13 5 is_stmt 1
  27              		.loc 1 13 30 is_stmt 0
  28              	# 13 "src/riscv.cpp" 1
  14              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 14 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE40:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB41:
GAS LISTING /tmp/cch4yKO8.s 			page 2


  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  17:src/riscv.cpp **** {
  47              		.loc 1 17 1 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F7 		addi	sp,sp,-144
  50              		.cfi_def_cfa_offset 144
  51 0024 23341108 		sd	ra,136(sp)
  52 0028 23308108 		sd	s0,128(sp)
  53 002c 233C9106 		sd	s1,120(sp)
  54 0030 23382107 		sd	s2,112(sp)
  55 0034 23343107 		sd	s3,104(sp)
  56              		.cfi_offset 1, -8
  57              		.cfi_offset 8, -16
  58              		.cfi_offset 9, -24
  59              		.cfi_offset 18, -32
  60              		.cfi_offset 19, -40
  61 0038 13040109 		addi	s0,sp,144
  62              		.cfi_def_cfa 8, 0
  18:src/riscv.cpp ****     uint64 args [5];
  63              		.loc 1 18 5
  19:src/riscv.cpp ****     __asm__ volatile ("mv %0, a0" : "=r" (args[0]));
  64              		.loc 1 19 5
  65              		.loc 1 19 52 is_stmt 0
  66              	#APP
  67              	# 19 "src/riscv.cpp" 1
  20              	    __asm__ volatile ("mv %0, a1" : "=r" (args[1]));
  68              		mv a5, a0
  69              	# 0 "" 2
  70              	#NO_APP
  71 0040 2334F4FA 		sd	a5,-88(s0)
  72              		.loc 1 20 5 is_stmt 1
  73              		.loc 1 20 52 is_stmt 0
  74              	#APP
  75              	# 20 "src/riscv.cpp" 1
  21              	    __asm__ volatile ("mv %0, a2" : "=r" (args[2]));
  76              		mv a5, a1
  77              	# 0 "" 2
  78              	#NO_APP
  79 0048 2338F4FA 		sd	a5,-80(s0)
  80              		.loc 1 21 5 is_stmt 1
  81              		.loc 1 21 52 is_stmt 0
  82              	#APP
  83              	# 21 "src/riscv.cpp" 1
  22              	    __asm__ volatile ("mv %0, a3" : "=r" (args[3]));
  84              		mv a5, a2
  85              	# 0 "" 2
  86              	#NO_APP
  87 0050 233CF4FA 		sd	a5,-72(s0)
  88              		.loc 1 22 5 is_stmt 1
  89              		.loc 1 22 52 is_stmt 0
  90              	#APP
  91              	# 22 "src/riscv.cpp" 1
  23              	    __asm__ volatile ("mv %0, a4" : "=r" (args[4]));
  92              		mv a5, a3
  93              	# 0 "" 2
  94              	#NO_APP
GAS LISTING /tmp/cch4yKO8.s 			page 3


  95 0058 2330F4FC 		sd	a5,-64(s0)
  96              		.loc 1 23 5 is_stmt 1
  97              		.loc 1 23 52 is_stmt 0
  98              	#APP
  99              	# 23 "src/riscv.cpp" 1
  24              	
 100              		mv a5, a4
 101              	# 0 "" 2
 102              	#NO_APP
 103 0060 2334F4FC 		sd	a5,-56(s0)
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****     uint64 scause = r_scause();
 104              		.loc 1 26 5 is_stmt 1
 105              	.LBB47:
 106              	.LBB48:
 107              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_1_SYNCHRONOUS_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // push x3..x31 registers on stack
  18:src/../h/riscv.hpp ****     static void pushRegisters();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // pop x3..x31 registers from stack
  21:src/../h/riscv.hpp ****     static void popRegisters();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register scause
  24:src/../h/riscv.hpp ****     static uint64 r_scause();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register scause
  27:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register sepc
  30:src/../h/riscv.hpp ****     static uint64 r_sepc();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register sepc
  33:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stvec
  36:src/../h/riscv.hpp ****     static uint64 r_stvec();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stvec
  39:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     // read register stval
GAS LISTING /tmp/cch4yKO8.s 			page 4


  42:src/../h/riscv.hpp ****     static uint64 r_stval();
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     // write register stval
  45:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     enum BitMaskSip
  48:src/../h/riscv.hpp ****     {
  49:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/riscv.hpp ****     };
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // mask set register sip
  55:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask clear register sip
  58:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // read register sip
  61:src/../h/riscv.hpp ****     static uint64 r_sip();
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // write register sip
  64:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     enum BitMaskSstatus
  67:src/../h/riscv.hpp ****     {
  68:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  69:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  70:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  71:src/../h/riscv.hpp ****     };
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // mask set register sstatus
  74:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // mask clear register sstatus
  77:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // read register sstatus
  80:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // write register sstatus
  83:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //supervisor trap
  86:src/../h/riscv.hpp ****     static void supervisorTrap();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** private:
  89:src/../h/riscv.hpp ****     //supervisor trap handler
  90:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** };
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  95:src/../h/riscv.hpp **** {
  96:src/../h/riscv.hpp ****     uint64 volatile scause;
 108              		.loc 2 96 5
  97:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
GAS LISTING /tmp/cch4yKO8.s 			page 5


 109              		.loc 2 97 5
 110              		.loc 2 97 72 is_stmt 0
 111              	#APP
 112              	# 97 "src/../h/riscv.hpp" 1
  98              	    return scause;
 113              		csrr a5, scause
 114              	# 0 "" 2
 115              	#NO_APP
 116 0068 2330F4F8 		sd	a5,-128(s0)
 117              		.loc 2 98 5 is_stmt 1
 118              		.loc 2 98 12 is_stmt 0
 119 006c 033704F8 		ld	a4,-128(s0)
 120              	.LVL0:
 121              	.LBE48:
 122              	.LBE47:
  27:src/riscv.cpp ****     if (scause == 0x0000000000000009UL || scause == 0x0000000000000008UL) {
 123              		.loc 1 27 5 is_stmt 1
 124              	.LBB49:
 125              		.loc 1 27 40 is_stmt 0
 126 0070 930687FF 		addi	a3,a4,-8
 127              		.loc 1 27 5
 128 0074 93071000 		li	a5,1
 129 0078 63F8D702 		bleu	a3,a5,.L18
 130              	.LBE49:
  28:src/riscv.cpp ****         //interrupt: NO, cause code: environment call from S-mode (9)
  29:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // + 4 zato sto prilikom ecall instrukcije pc se ne stavlja na 
  30:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
  31:src/riscv.cpp **** 
  32:src/riscv.cpp ****         uint64 num = args[0];
  33:src/riscv.cpp ****         uint64 shouldDispatch = 1;
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****         if (num == 0x01)    //mem_alloc
  36:src/riscv.cpp ****         {
  37:src/riscv.cpp **** 
  38:src/riscv.cpp ****         }
  39:src/riscv.cpp ****         else if (num == 0x02)   //mem_free
  40:src/riscv.cpp ****         {
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****         }
  43:src/riscv.cpp ****         else if (num == 0x11)    //thread_create
  44:src/riscv.cpp ****         {
  45:src/riscv.cpp ****             thread_t* handle = (thread_t*) args[1];
  46:src/riscv.cpp ****             TCB::Body start_routine = (TCB::Body) args[2];
  47:src/riscv.cpp ****             void* arg = (void*) args[3];
  48:src/riscv.cpp ****             uint64* stack = (uint64*) args[4];
  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             *handle = TCB::createThread(start_routine, arg, stack);
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****             if ((uint64)handle > 0) {
  53:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (0));
  54:src/riscv.cpp ****             } else {
  55:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (1));
  56:src/riscv.cpp ****             }
  57:src/riscv.cpp ****         }
  58:src/riscv.cpp ****         else if (num == 0x12) //thread_exit
  59:src/riscv.cpp ****         {
  60:src/riscv.cpp ****             TCB::running->setFinished(true);
GAS LISTING /tmp/cch4yKO8.s 			page 6


  61:src/riscv.cpp ****             //__asm__ volatile ("mv a0, %0" : : "r" (0));
  62:src/riscv.cpp ****         }
  63:src/riscv.cpp ****         else if (num == 0x13) //thread_dispatch
  64:src/riscv.cpp ****         {
  65:src/riscv.cpp ****             //dispatch automatically
  66:src/riscv.cpp ****         }
  67:src/riscv.cpp ****         else if (num == 0x14) //thread_start
  68:src/riscv.cpp ****         {
  69:src/riscv.cpp ****             thread_t handle = (thread_t) args[1];
  70:src/riscv.cpp ****             handle->start();
  71:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (0));
  72:src/riscv.cpp ****         }
  73:src/riscv.cpp ****         else if (num == 0x21) //sem_open
  74:src/riscv.cpp ****         {
  75:src/riscv.cpp ****             sem_t* handle = (sem_t*) args[1];
  76:src/riscv.cpp ****             unsigned init = (unsigned) args[2];
  77:src/riscv.cpp **** 
  78:src/riscv.cpp ****             *handle = _sem::createSem( init );
  79:src/riscv.cpp ****         }
  80:src/riscv.cpp ****         else if (num == 0x22) //sem_close
  81:src/riscv.cpp ****         {
  82:src/riscv.cpp ****            // close semaphore
  83:src/riscv.cpp ****         }
  84:src/riscv.cpp ****         else if (num == 0x23) //sem_wait
  85:src/riscv.cpp ****         {
  86:src/riscv.cpp ****             sem_t sem = (sem_t) args[1];
  87:src/riscv.cpp **** 
  88:src/riscv.cpp ****             int ret = sem->wait();
  89:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
  90:src/riscv.cpp **** 
  91:src/riscv.cpp ****             shouldDispatch = 0;
  92:src/riscv.cpp ****         }
  93:src/riscv.cpp ****         else if (num == 0x24) //sem_signal
  94:src/riscv.cpp ****         {
  95:src/riscv.cpp ****             sem_t sem = (sem_t) args[1];
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****             int ret = sem->signal();
  98:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
  99:src/riscv.cpp **** 
 100:src/riscv.cpp ****             shouldDispatch = 0;
 101:src/riscv.cpp ****         }
 102:src/riscv.cpp ****         else if (num == 0x42) //putc
 103:src/riscv.cpp ****         {
 104:src/riscv.cpp ****             /*char chr = (char) args[1];
 105:src/riscv.cpp ****             __putc(chr);
 106:src/riscv.cpp **** */
 107:src/riscv.cpp ****             shouldDispatch = 0;
 108:src/riscv.cpp ****         }
 109:src/riscv.cpp ****         else if (num == 0x41) //getc
 110:src/riscv.cpp ****         {
 111:src/riscv.cpp **** /*            uint64 volatile c = (uint64)__getc();
 112:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (c));
 113:src/riscv.cpp **** */
 114:src/riscv.cpp ****             //shouldDispatch = 0;
 115:src/riscv.cpp ****         }
 116:src/riscv.cpp **** 
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
GAS LISTING /tmp/cch4yKO8.s 			page 7


 118:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 119:src/riscv.cpp ****             TCB::dispatch();
 120:src/riscv.cpp ****         }
 121:src/riscv.cpp ****         // w_sstatus i w_sepc nece raditi novokreirana nit, zato o tome treba voditi racuna u threa
 122:src/riscv.cpp ****         w_sstatus(sstatus);
 123:src/riscv.cpp ****         w_sepc(sepc);
 124:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 131              		.loc 1 124 12 is_stmt 1
 132              	.LBB189:
 133              	.LBB50:
 134 007c 9307F0FF 		li	a5,-1
 135 0080 9397F703 		slli	a5,a5,63
 136 0084 93871700 		addi	a5,a5,1
 137 0088 630CF716 		beq	a4,a5,.L19
 125:src/riscv.cpp ****         //interrupt: yes, cause code: supervisor software interrupt (timer)
 126:src/riscv.cpp ****         TCB::timeSliceCounter++;
 127:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()){
 128:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 129:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 130:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 131:src/riscv.cpp ****             TCB::dispatch();
 132:src/riscv.cpp ****             // w_sstatus i w_sepc nece raditi novokreirana nit, zato o tome treba voditi racuna u t
 133:src/riscv.cpp ****             w_sstatus(sstatus);
 134:src/riscv.cpp ****             w_sepc(sepc);
 135:src/riscv.cpp ****         }
 136:src/riscv.cpp ****         mc_sip(SIP_SSIP );
 137:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL){
 138              		.loc 1 137 12
 139 008c 9307F0FF 		li	a5,-1
 140 0090 9397F703 		slli	a5,a5,63
 141 0094 93879700 		addi	a5,a5,9
 142 0098 631AF70E 		bne	a4,a5,.L3
 138:src/riscv.cpp ****         //interrupt: yes, cause code: supervisor external interrupt (timer)
 139:src/riscv.cpp ****         console_handler();
 143              		.loc 1 139 9
 144              		.loc 1 139 24 is_stmt 0
 145 009c 97000000 		call	console_handler@plt
 145      E7800000 
 146              	.LVL1:
 147              	.LBE50:
 148              	.LBE189:
 140:src/riscv.cpp ****     } else {
 141:src/riscv.cpp ****         // unexpected trap cause
 142:src/riscv.cpp **** 
 143:src/riscv.cpp ****         // print(scause)
 144:src/riscv.cpp ****         // print(sepc)
 145:src/riscv.cpp ****         // print(stval)
 146:src/riscv.cpp ****     }
 147:src/riscv.cpp **** }...
 149              		.loc 1 147 1
 150 00a4 6F00800E 		j	.L3
 151              	.LVL2:
 152              	.L18:
 153              	.LBB190:
 154              	.LBB67:
  29:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // + 4 zato sto prilikom ecall instrukcije pc se ne stavlja na 
 155              		.loc 1 29 9 is_stmt 1
GAS LISTING /tmp/cch4yKO8.s 			page 8


 156              	.LBB68:
 157              	.LBB69:
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 104:src/../h/riscv.hpp **** }
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 107:src/../h/riscv.hpp **** {
 108:src/../h/riscv.hpp ****     uint64 volatile sepc;
 158              		.loc 2 108 5
 109:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 159              		.loc 2 109 5
 160              		.loc 2 109 64 is_stmt 0
 161              	#APP
 162              	# 109 "src/../h/riscv.hpp" 1
 110              	    return sepc;
 163              		csrr a5, sepc
 164              	# 0 "" 2
 165              	#NO_APP
 166 00ac 2338F4F8 		sd	a5,-112(s0)
 167              		.loc 2 110 5 is_stmt 1
 168              		.loc 2 110 12 is_stmt 0
 169 00b0 833404F9 		ld	s1,-112(s0)
 170              	.LBE69:
 171              	.LBE68:
  29:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // + 4 zato sto prilikom ecall instrukcije pc se ne stavlja na 
 172              		.loc 1 29 34
 173 00b4 93844400 		addi	s1,s1,4
 174              	.LVL3:
  30:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 175              		.loc 1 30 9 is_stmt 1
 176              	.LBB70:
 177              	.LBB71:
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     uint64 volatile stvec;
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 122:src/../h/riscv.hpp ****     return stvec;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 131:src/../h/riscv.hpp **** {
GAS LISTING /tmp/cch4yKO8.s 			page 9


 132:src/../h/riscv.hpp ****     uint64 volatile stval;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 134:src/../h/riscv.hpp ****     return stval;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     uint64 volatile sip;
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 156:src/../h/riscv.hpp ****     return sip;
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 178              		.loc 2 176 5
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 179              		.loc 2 177 5
 180              		.loc 2 177 76 is_stmt 0
 181              	#APP
 182              	# 177 "src/../h/riscv.hpp" 1
 178              	    return sstatus;
 183              		csrr a5, sstatus
 184              	# 0 "" 2
 185              	#NO_APP
 186 00bc 2334F4F8 		sd	a5,-120(s0)
 187              		.loc 2 178 5 is_stmt 1
GAS LISTING /tmp/cch4yKO8.s 			page 10


 188              		.loc 2 178 12 is_stmt 0
 189 00c0 033984F8 		ld	s2,-120(s0)
 190              	.LVL4:
 191              	.LBE71:
 192              	.LBE70:
  32:src/riscv.cpp ****         uint64 num = args[0];
 193              		.loc 1 32 9 is_stmt 1
  32:src/riscv.cpp ****         uint64 num = args[0];
 194              		.loc 1 32 16 is_stmt 0
 195 00c4 833784FA 		ld	a5,-88(s0)
 196              	.LVL5:
  33:src/riscv.cpp ****         uint64 shouldDispatch = 1;
 197              		.loc 1 33 9 is_stmt 1
  35:src/riscv.cpp ****         if (num == 0x01)    //mem_alloc
 198              		.loc 1 35 9
 199              	.LBB72:
 200 00c8 13071000 		li	a4,1
 201              	.LVL6:
 202 00cc 6382E70A 		beq	a5,a4,.L5
 203              	.LBE72:
 204              	.LBE67:
 205              	.LBE190:
  39:src/riscv.cpp ****         else if (num == 0x02)   //mem_free
 206              		.loc 1 39 14
 207              	.LBB191:
 208              	.LBB178:
 209              	.LBB159:
 210              	.LBB73:
 211 00d0 13072000 		li	a4,2
 212 00d4 638EE708 		beq	a5,a4,.L5
 213              	.LBE73:
 214              	.LBE159:
 215              	.LBE178:
 216              	.LBE191:
  43:src/riscv.cpp ****         else if (num == 0x11)    //thread_create
 217              		.loc 1 43 14
 218              	.LBB192:
 219              	.LBB179:
 220              	.LBB160:
 221              	.LBB145:
 222              	.LBB74:
 223 00d8 13071001 		li	a4,17
 224 00dc 6384E704 		beq	a5,a4,.L20
 225              	.LBE74:
 226              	.LBE145:
 227              	.LBE160:
 228              	.LBE179:
 229              	.LBE192:
  58:src/riscv.cpp ****         else if (num == 0x12) //thread_exit
 230              		.loc 1 58 14
 231              	.LBB193:
 232              	.LBB180:
 233              	.LBB161:
 234              	.LBB146:
 235              	.LBB132:
 236              	.LBB75:
 237 00e0 13072001 		li	a4,18
GAS LISTING /tmp/cch4yKO8.s 			page 11


 238 00e4 638CE706 		beq	a5,a4,.L21
 239              	.LBE75:
 240              	.LBE132:
 241              	.LBE146:
 242              	.LBE161:
 243              	.LBE180:
 244              	.LBE193:
  63:src/riscv.cpp ****         else if (num == 0x13) //thread_dispatch
 245              		.loc 1 63 14
 246              	.LBB194:
 247              	.LBB181:
 248              	.LBB162:
 249              	.LBB147:
 250              	.LBB133:
 251              	.LBB119:
 252              	.LBB76:
 253 00e8 13073001 		li	a4,19
 254 00ec 6382E708 		beq	a5,a4,.L5
 255              	.LBE76:
 256              	.LBE119:
 257              	.LBE133:
 258              	.LBE147:
 259              	.LBE162:
 260              	.LBE181:
 261              	.LBE194:
  67:src/riscv.cpp ****         else if (num == 0x14) //thread_start
 262              		.loc 1 67 14
 263              	.LBB195:
 264              	.LBB182:
 265              	.LBB163:
 266              	.LBB148:
 267              	.LBB134:
 268              	.LBB120:
 269              	.LBB108:
 270              	.LBB77:
 271 00f0 13074001 		li	a4,20
 272 00f4 638AE70A 		beq	a5,a4,.L22
 273              	.LBE77:
 274              	.LBE108:
 275              	.LBE120:
 276              	.LBE134:
 277              	.LBE148:
 278              	.LBE163:
 279              	.LBE182:
 280              	.LBE195:
  73:src/riscv.cpp ****         else if (num == 0x21) //sem_open
 281              		.loc 1 73 14
 282              	.LBB196:
 283              	.LBB183:
 284              	.LBB164:
 285              	.LBB149:
 286              	.LBB135:
 287              	.LBB121:
 288              	.LBB109:
 289              	.LBB100:
 290              	.LBB78:
 291 00f8 13071002 		li	a4,33
GAS LISTING /tmp/cch4yKO8.s 			page 12


 292 00fc 6382E70C 		beq	a5,a4,.L23
 293              	.LBE78:
 294              	.LBE100:
 295              	.LBE109:
 296              	.LBE121:
 297              	.LBE135:
 298              	.LBE149:
 299              	.LBE164:
 300              	.LBE183:
 301              	.LBE196:
  80:src/riscv.cpp ****         else if (num == 0x22) //sem_close
 302              		.loc 1 80 14
 303              	.LBB197:
 304              	.LBB184:
 305              	.LBB165:
 306              	.LBB150:
 307              	.LBB136:
 308              	.LBB122:
 309              	.LBB110:
 310              	.LBB101:
 311              	.LBB93:
 312              	.LBB79:
 313 0100 13072002 		li	a4,34
 314 0104 6386E706 		beq	a5,a4,.L5
 315              	.LBE79:
 316              	.LBE93:
 317              	.LBE101:
 318              	.LBE110:
 319              	.LBE122:
 320              	.LBE136:
 321              	.LBE150:
 322              	.LBE165:
 323              	.LBE184:
 324              	.LBE197:
  84:src/riscv.cpp ****         else if (num == 0x23) //sem_wait
 325              		.loc 1 84 14
 326              	.LBB198:
 327              	.LBB185:
 328              	.LBB166:
 329              	.LBB151:
 330              	.LBB137:
 331              	.LBB123:
 332              	.LBB111:
 333              	.LBB102:
 334              	.LBB94:
 335              	.LBB88:
 336              	.LBB80:
 337 0108 13073002 		li	a4,35
 338 010c 6386E70C 		beq	a5,a4,.L24
 339              	.LBE80:
 340              	.LBE88:
 341              	.LBE94:
 342              	.LBE102:
 343              	.LBE111:
 344              	.LBE123:
 345              	.LBE137:
 346              	.LBE151:
GAS LISTING /tmp/cch4yKO8.s 			page 13


 347              	.LBE166:
 348              	.LBE185:
 349              	.LBE198:
  93:src/riscv.cpp ****         else if (num == 0x24) //sem_signal
 350              		.loc 1 93 14
 351              	.LBB199:
 352              	.LBB186:
 353              	.LBB167:
 354              	.LBB152:
 355              	.LBB138:
 356              	.LBB124:
 357              	.LBB112:
 358              	.LBB103:
 359              	.LBB95:
 360              	.LBB89:
 361              	.LBB85:
 362              	.LBB81:
 363 0110 13074002 		li	a4,36
 364 0114 638CE70C 		beq	a5,a4,.L25
 102:src/riscv.cpp ****         else if (num == 0x42) //putc
 365              		.loc 1 102 14
 366 0118 13072004 		li	a4,66
 367 011c 639AE704 		bne	a5,a4,.L5
 368 0120 6F004006 		j	.L12
 369              	.L20:
 370              	.LBE81:
 371              	.LBE85:
 372              	.LBE89:
 373              	.LBE95:
 374              	.LBE103:
 375              	.LBE112:
 376              	.LBE124:
 377              	.LBB125:
  45:src/riscv.cpp ****             thread_t* handle = (thread_t*) args[1];
 378              		.loc 1 45 13
  45:src/riscv.cpp ****             thread_t* handle = (thread_t*) args[1];
 379              		.loc 1 45 50 is_stmt 0
 380 0124 833904FB 		ld	s3,-80(s0)
 381              	.LVL7:
  46:src/riscv.cpp ****             TCB::Body start_routine = (TCB::Body) args[2];
 382              		.loc 1 46 13 is_stmt 1
  47:src/riscv.cpp ****             void* arg = (void*) args[3];
 383              		.loc 1 47 13
  48:src/riscv.cpp ****             uint64* stack = (uint64*) args[4];
 384              		.loc 1 48 13
  50:src/riscv.cpp ****             *handle = TCB::createThread(start_routine, arg, stack);
 385              		.loc 1 50 13
  50:src/riscv.cpp ****             *handle = TCB::createThread(start_routine, arg, stack);
 386              		.loc 1 50 40 is_stmt 0
 387 0128 033684FC 		ld	a2,-56(s0)
 388 012c 833504FC 		ld	a1,-64(s0)
 389 0130 033584FB 		ld	a0,-72(s0)
 390 0134 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 390      E7800000 
 391              	.LVL8:
  50:src/riscv.cpp ****             *handle = TCB::createThread(start_routine, arg, stack);
 392              		.loc 1 50 21
GAS LISTING /tmp/cch4yKO8.s 			page 14


 393 013c 23B0A900 		sd	a0,0(s3)
  52:src/riscv.cpp ****             if ((uint64)handle > 0) {
 394              		.loc 1 52 13 is_stmt 1
 395 0140 63880900 		beqz	s3,.L7
  53:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (0));
 396              		.loc 1 53 17
  53:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (0));
 397              		.loc 1 53 59 is_stmt 0
 398 0144 93070000 		li	a5,0
 399              	#APP
 400              	# 53 "src/riscv.cpp" 1
 401              		mv a0, a5
 402              	# 0 "" 2
 403              	#NO_APP
 404              	.LBE125:
 405              	.LBE138:
 406              	.LBE152:
 407              	.LBE167:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 408              		.loc 1 117 9 is_stmt 1
 409 014c 6F004002 		j	.L5
 410              	.L7:
 411              	.LBB168:
 412              	.LBB153:
 413              	.LBB139:
 414              	.LBB126:
  55:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (1));
 415              		.loc 1 55 17
  55:src/riscv.cpp ****                 __asm__ volatile ("mv a0, %0" : : "r" (1));
 416              		.loc 1 55 59 is_stmt 0
 417 0150 93071000 		li	a5,1
 418              	#APP
 419              	# 55 "src/riscv.cpp" 1
 420              		mv a0, a5
 421              	# 0 "" 2
 422              	#NO_APP
 423              	.LBE126:
 424              	.LBE139:
 425              	.LBE153:
 426              	.LBE168:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 427              		.loc 1 117 9 is_stmt 1
 428 0158 6F008001 		j	.L5
 429              	.LVL9:
 430              	.L21:
 431              	.LBB169:
 432              	.LBB154:
 433              	.LBB140:
 434              	.LBB127:
  60:src/riscv.cpp ****             TCB::running->setFinished(true);
 435              		.loc 1 60 13
  60:src/riscv.cpp ****             TCB::running->setFinished(true);
 436              		.loc 1 60 38 is_stmt 0
 437 015c 97070000 		la	a5,_ZN3TCB7runningE
 437      83B70700 
 438              	.LVL10:
 439 0164 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/cch4yKO8.s 			page 15


 440              	.LVL11:
 441              	.LBB113:
 442              	.LBB114:
 443              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 8/15/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef PROJECT_BASE_TCB_HPP
   6:src/../h/tcb.hpp **** #define PROJECT_BASE_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "riscv.hpp"
  11:src/../h/tcb.hpp **** #include "print.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** //#include "print.hpp"
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp **** //Thread Control Block
  16:src/../h/tcb.hpp **** class TCB
  17:src/../h/tcb.hpp **** {
  18:src/../h/tcb.hpp **** public:
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     enum Status {
  21:src/../h/tcb.hpp ****         CREATED,
  22:src/../h/tcb.hpp ****         READY,
  23:src/../h/tcb.hpp ****         RUNNING,
  24:src/../h/tcb.hpp ****         FINISHED,
  25:src/../h/tcb.hpp ****         BLOCKED
  26:src/../h/tcb.hpp ****     };
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     bool isFinished() const { return status == FINISHED; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     void setFinished(bool finished) { if (finished) status = FINISHED; }
 444              		.loc 3 32 39 is_stmt 1
 445              		.loc 3 32 53
 446              		.loc 3 32 60 is_stmt 0
 447 0168 13073000 		li	a4,3
 448 016c 23A8E702 		sw	a4,48(a5)
 449              	.LVL12:
 450              	.LBE114:
 451              	.LBE113:
 452              	.LBE127:
 453              	.LBE140:
 454              	.LBE154:
 455              	.LBE169:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 456              		.loc 1 117 9 is_stmt 1
 457              	.L5:
 118:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 458              		.loc 1 118 13
 118:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 459              		.loc 1 118 35 is_stmt 0
 460 0170 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 460      83B70700 
GAS LISTING /tmp/cch4yKO8.s 			page 16


 461 0178 23B00700 		sd	zero,0(a5)
 119:src/riscv.cpp ****             TCB::dispatch();
 462              		.loc 1 119 13 is_stmt 1
 119:src/riscv.cpp ****             TCB::dispatch();
 463              		.loc 1 119 26 is_stmt 0
 464 017c 97000000 		call	_ZN3TCB8dispatchEv@plt
 464      E7800000 
 465              	.LVL13:
 466              	.L12:
 122:src/riscv.cpp ****         w_sstatus(sstatus);
 467              		.loc 1 122 9 is_stmt 1
 468              	.LBB170:
 469              	.LBB171:
 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 470              		.loc 2 183 5
 471              		.loc 2 183 77 is_stmt 0
 472              	#APP
 473              	# 183 "src/../h/riscv.hpp" 1
 184              	}
 474              		csrw sstatus, s2
 475              	# 0 "" 2
 476              	.LVL14:
 477              	#NO_APP
 478              	.LBE171:
 479              	.LBE170:
 123:src/riscv.cpp ****         w_sepc(sepc);
 480              		.loc 1 123 9 is_stmt 1
 481              	.LBB172:
 482              	.LBB173:
 115:src/../h/riscv.hpp **** }
 483              		.loc 2 115 5
 115:src/../h/riscv.hpp **** }
 484              		.loc 2 115 65 is_stmt 0
 485              	#APP
 486              	# 115 "src/../h/riscv.hpp" 1
 487              		csrw sepc, s1
 488              	# 0 "" 2
 489              	.LVL15:
 490              	#NO_APP
 491              	.L3:
 492              	.LBE173:
 493              	.LBE172:
 494              	.LBE186:
 495              	.LBE199:
 496              		.loc 1 147 1
 497 018c 83308108 		ld	ra,136(sp)
 498              		.cfi_remember_state
 499              		.cfi_restore 1
 500 0190 03340108 		ld	s0,128(sp)
 501              		.cfi_restore 8
 502              		.cfi_def_cfa 2, 144
 503 0194 83348107 		ld	s1,120(sp)
 504              		.cfi_restore 9
GAS LISTING /tmp/cch4yKO8.s 			page 17


 505 0198 03390107 		ld	s2,112(sp)
 506              		.cfi_restore 18
 507 019c 83398106 		ld	s3,104(sp)
 508              		.cfi_restore 19
 509 01a0 13010109 		addi	sp,sp,144
 510              		.cfi_def_cfa_offset 0
 511 01a4 67800000 		jr	ra
 512              	.LVL16:
 513              	.L22:
 514              		.cfi_restore_state
 515              	.LBB200:
 516              	.LBB187:
 517              	.LBB174:
 518              	.LBB155:
 519              	.LBB141:
 520              	.LBB128:
 521              	.LBB115:
 522              	.LBB104:
 523              	.LBB96:
  69:src/riscv.cpp ****             thread_t handle = (thread_t) args[1];
 524              		.loc 1 69 13 is_stmt 1
  70:src/riscv.cpp ****             handle->start();
 525              		.loc 1 70 13
  70:src/riscv.cpp ****             handle->start();
 526              		.loc 1 70 26 is_stmt 0
 527 01a8 033504FB 		ld	a0,-80(s0)
 528 01ac 97000000 		call	_ZN3TCB5startEv@plt
 528      E7800000 
 529              	.LVL17:
  71:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (0));
 530              		.loc 1 71 13 is_stmt 1
  71:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (0));
 531              		.loc 1 71 55 is_stmt 0
 532 01b4 93070000 		li	a5,0
 533              	#APP
 534              	# 71 "src/riscv.cpp" 1
 535              		mv a0, a5
 536              	# 0 "" 2
 537              	#NO_APP
 538              	.LBE96:
 539              	.LBE104:
 540              	.LBE115:
 541              	.LBE128:
 542              	.LBE141:
 543              	.LBE155:
 544              	.LBE174:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 545              		.loc 1 117 9 is_stmt 1
 546 01bc 6FF05FFB 		j	.L5
 547              	.LVL18:
 548              	.L23:
 549              	.LBB175:
 550              	.LBB156:
 551              	.LBB142:
 552              	.LBB129:
 553              	.LBB116:
 554              	.LBB105:
GAS LISTING /tmp/cch4yKO8.s 			page 18


 555              	.LBB97:
 556              	.LBB90:
  75:src/riscv.cpp ****             sem_t* handle = (sem_t*) args[1];
 557              		.loc 1 75 13
  75:src/riscv.cpp ****             sem_t* handle = (sem_t*) args[1];
 558              		.loc 1 75 44 is_stmt 0
 559 01c0 833904FB 		ld	s3,-80(s0)
 560              	.LVL19:
  76:src/riscv.cpp ****             unsigned init = (unsigned) args[2];
 561              		.loc 1 76 13 is_stmt 1
  78:src/riscv.cpp ****             *handle = _sem::createSem( init );
 562              		.loc 1 78 13
  78:src/riscv.cpp ****             *handle = _sem::createSem( init );
 563              		.loc 1 78 38 is_stmt 0
 564 01c4 032584FB 		lw	a0,-72(s0)
 565 01c8 97000000 		call	_ZN4_sem9createSemEi@plt
 565      E7800000 
 566              	.LVL20:
  78:src/riscv.cpp ****             *handle = _sem::createSem( init );
 567              		.loc 1 78 21
 568 01d0 23B0A900 		sd	a0,0(s3)
 569              	.LBE90:
 570              	.LBE97:
 571              	.LBE105:
 572              	.LBE116:
 573              	.LBE129:
 574              	.LBE142:
 575              	.LBE156:
 576              	.LBE175:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 577              		.loc 1 117 9 is_stmt 1
 578 01d4 6FF0DFF9 		j	.L5
 579              	.LVL21:
 580              	.L24:
 581              	.LBB176:
 582              	.LBB157:
 583              	.LBB143:
 584              	.LBB130:
 585              	.LBB117:
 586              	.LBB106:
 587              	.LBB98:
 588              	.LBB91:
 589              	.LBB86:
 590              	.LBB83:
  86:src/riscv.cpp ****             sem_t sem = (sem_t) args[1];
 591              		.loc 1 86 13
  88:src/riscv.cpp ****             int ret = sem->wait();
 592              		.loc 1 88 13
  88:src/riscv.cpp ****             int ret = sem->wait();
 593              		.loc 1 88 32 is_stmt 0
 594 01d8 033504FB 		ld	a0,-80(s0)
 595 01dc 97000000 		call	_ZN4_sem4waitEv@plt
 595      E7800000 
 596              	.LVL22:
  89:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
 597              		.loc 1 89 13 is_stmt 1
  89:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/cch4yKO8.s 			page 19


 598              		.loc 1 89 57 is_stmt 0
 599              	#APP
 600              	# 89 "src/riscv.cpp" 1
  91:src/riscv.cpp ****             shouldDispatch = 0;
 601              		mv a0, a0
 602              	# 0 "" 2
 603              		.loc 1 91 13 is_stmt 1
 604              	.LVL23:
 605              	#NO_APP
 606              	.LBE83:
 607              	.LBE86:
 608              	.LBE91:
 609              	.LBE98:
 610              	.LBE106:
 611              	.LBE117:
 612              	.LBE130:
 613              	.LBE143:
 614              	.LBE157:
 615              	.LBE176:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 616              		.loc 1 117 9
 617 01e8 6FF0DFF9 		j	.L12
 618              	.LVL24:
 619              	.L25:
 620              	.LBB177:
 621              	.LBB158:
 622              	.LBB144:
 623              	.LBB131:
 624              	.LBB118:
 625              	.LBB107:
 626              	.LBB99:
 627              	.LBB92:
 628              	.LBB87:
 629              	.LBB84:
 630              	.LBB82:
  95:src/riscv.cpp ****             sem_t sem = (sem_t) args[1];
 631              		.loc 1 95 13
  97:src/riscv.cpp ****             int ret = sem->signal();
 632              		.loc 1 97 13
  97:src/riscv.cpp ****             int ret = sem->signal();
 633              		.loc 1 97 34 is_stmt 0
 634 01ec 033504FB 		ld	a0,-80(s0)
 635 01f0 97000000 		call	_ZN4_sem6signalEv@plt
 635      E7800000 
 636              	.LVL25:
  98:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
 637              		.loc 1 98 13 is_stmt 1
  98:src/riscv.cpp ****             __asm__ volatile ("mv a0, %0" : : "r" (ret));
 638              		.loc 1 98 57 is_stmt 0
 639              	#APP
 640              	# 98 "src/riscv.cpp" 1
 100:src/riscv.cpp ****             shouldDispatch = 0;
 641              		mv a0, a0
 642              	# 0 "" 2
 643              		.loc 1 100 13 is_stmt 1
 644              	.LVL26:
 645              	#NO_APP
GAS LISTING /tmp/cch4yKO8.s 			page 20


 646              	.LBE82:
 647              	.LBE84:
 648              	.LBE87:
 649              	.LBE92:
 650              	.LBE99:
 651              	.LBE107:
 652              	.LBE118:
 653              	.LBE131:
 654              	.LBE144:
 655              	.LBE158:
 656              	.LBE177:
 117:src/riscv.cpp ****         if ( shouldDispatch == 1) {
 657              		.loc 1 117 9
 658 01fc 6FF09FF8 		j	.L12
 659              	.LVL27:
 660              	.L19:
 661              	.LBE187:
 662              	.LBB188:
 663              	.LBB51:
 126:src/riscv.cpp ****         TCB::timeSliceCounter++;
 664              		.loc 1 126 9
 126:src/riscv.cpp ****         TCB::timeSliceCounter++;
 665              		.loc 1 126 30 is_stmt 0
 666 0200 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 666      03370700 
 667              	.LVL28:
 668 0208 83370700 		ld	a5,0(a4)
 669 020c 93871700 		addi	a5,a5,1
 670 0210 2330F700 		sd	a5,0(a4)
 127:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()){
 671              		.loc 1 127 9 is_stmt 1
 672              	.LBB52:
 127:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()){
 673              		.loc 1 127 64 is_stmt 0
 674 0214 17070000 		la	a4,_ZN3TCB7runningE
 674      03370700 
 675 021c 03370700 		ld	a4,0(a4)
 676              	.LVL29:
 677              	.LBB53:
 678              	.LBB54:
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     void* getArg() { return arg; }
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 679              		.loc 3 36 35 is_stmt 1
 680              		.loc 3 36 42 is_stmt 0
 681 0220 03378702 		ld	a4,40(a4)
 682              	.LVL30:
 683              	.LBE54:
 684              	.LBE53:
 127:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()){
 685              		.loc 1 127 9
 686 0224 63F8E700 		bgeu	a5,a4,.L26
 687              	.LVL31:
 688              	.L16:
 689              	.LBE52:
 136:src/riscv.cpp ****         mc_sip(SIP_SSIP );
GAS LISTING /tmp/cch4yKO8.s 			page 21


 690              		.loc 1 136 9 is_stmt 1
 691              	.LBB64:
 692              	.LBB65:
 149:src/../h/riscv.hpp **** }
 693              		.loc 2 149 5
 149:src/../h/riscv.hpp **** }
 694              		.loc 2 149 64 is_stmt 0
 695 0228 93072000 		li	a5,2
 696              	#APP
 697              	# 149 "src/../h/riscv.hpp" 1
 150:src/../h/riscv.hpp **** 
 698              		csrc sip, a5
 699              	# 0 "" 2
 700              		.loc 2 150 1
 701              	#NO_APP
 702 0230 6FF0DFF5 		j	.L3
 703              	.LVL32:
 704              	.L26:
 705              	.LBE65:
 706              	.LBE64:
 707              	.LBB66:
 708              	.LBB55:
 128:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 709              		.loc 1 128 13 is_stmt 1
 710              	.LBB56:
 711              	.LBB57:
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 712              		.loc 2 108 5
 109:src/../h/riscv.hpp ****     return sepc;
 713              		.loc 2 109 5
 109:src/../h/riscv.hpp ****     return sepc;
 714              		.loc 2 109 64 is_stmt 0
 715              	#APP
 716              	# 109 "src/../h/riscv.hpp" 1
 717              		csrr a5, sepc
 718              	# 0 "" 2
 719              	#NO_APP
 720 0238 2330F4FA 		sd	a5,-96(s0)
 110:src/../h/riscv.hpp **** }
 721              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 722              		.loc 2 110 12 is_stmt 0
 723 023c 833704FA 		ld	a5,-96(s0)
 724              	.LBE57:
 725              	.LBE56:
 128:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 726              		.loc 1 128 43
 727 0240 2338F4F6 		sd	a5,-144(s0)
 129:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 728              		.loc 1 129 13 is_stmt 1
 729              	.LBB58:
 730              	.LBB59:
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 731              		.loc 2 176 5
 177:src/../h/riscv.hpp ****     return sstatus;
 732              		.loc 2 177 5
 177:src/../h/riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cch4yKO8.s 			page 22


 733              		.loc 2 177 76 is_stmt 0
 734              	#APP
 735              	# 177 "src/../h/riscv.hpp" 1
 736              		csrr a5, sstatus
 737              	# 0 "" 2
 738              	#NO_APP
 739 0248 233CF4F8 		sd	a5,-104(s0)
 178:src/../h/riscv.hpp **** }
 740              		.loc 2 178 5 is_stmt 1
 178:src/../h/riscv.hpp **** }
 741              		.loc 2 178 12 is_stmt 0
 742 024c 833784F9 		ld	a5,-104(s0)
 743              	.LBE59:
 744              	.LBE58:
 129:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 745              		.loc 1 129 49
 746 0250 233CF4F6 		sd	a5,-136(s0)
 130:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 747              		.loc 1 130 13 is_stmt 1
 130:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 748              		.loc 1 130 35 is_stmt 0
 749 0254 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 749      83B70700 
 750 025c 23B00700 		sd	zero,0(a5)
 131:src/riscv.cpp ****             TCB::dispatch();
 751              		.loc 1 131 13 is_stmt 1
 131:src/riscv.cpp ****             TCB::dispatch();
 752              		.loc 1 131 26 is_stmt 0
 753 0260 97000000 		call	_ZN3TCB8dispatchEv@plt
 753      E7800000 
 754              	.LVL33:
 133:src/riscv.cpp ****             w_sstatus(sstatus);
 755              		.loc 1 133 13 is_stmt 1
 133:src/riscv.cpp ****             w_sstatus(sstatus);
 756              		.loc 1 133 22 is_stmt 0
 757 0268 833784F7 		ld	a5,-136(s0)
 758              	.LVL34:
 759              	.LBB60:
 760              	.LBB61:
 183:src/../h/riscv.hpp **** }
 761              		.loc 2 183 5 is_stmt 1
 183:src/../h/riscv.hpp **** }
 762              		.loc 2 183 77 is_stmt 0
 763              	#APP
 764              	# 183 "src/../h/riscv.hpp" 1
 765              		csrw sstatus, a5
 766              	# 0 "" 2
 767              	.LVL35:
 768              	#NO_APP
 769              	.LBE61:
 770              	.LBE60:
 134:src/riscv.cpp ****             w_sepc(sepc);
 771              		.loc 1 134 13 is_stmt 1
 134:src/riscv.cpp ****             w_sepc(sepc);
 772              		.loc 1 134 19 is_stmt 0
 773 0270 833704F7 		ld	a5,-144(s0)
 774              	.LVL36:
GAS LISTING /tmp/cch4yKO8.s 			page 23


 775              	.LBB62:
 776              	.LBB63:
 115:src/../h/riscv.hpp **** }
 777              		.loc 2 115 5 is_stmt 1
 115:src/../h/riscv.hpp **** }
 778              		.loc 2 115 65 is_stmt 0
 779              	#APP
 780              	# 115 "src/../h/riscv.hpp" 1
 116:src/../h/riscv.hpp **** 
 781              		csrw sepc, a5
 782              	# 0 "" 2
 783              		.loc 2 116 1
 784              	#NO_APP
 785 0278 6FF01FFB 		j	.L16
 786              	.LBE63:
 787              	.LBE62:
 788              	.LBE55:
 789              	.LBE66:
 790              	.LBE51:
 791              	.LBE188:
 792              	.LBE200:
 793              		.cfi_endproc
 794              	.LFE41:
 796              	.Letext0:
 797              		.file 4 "src/../h/../lib/hw.h"
 798              		.file 5 "src/../h/list.hpp"
 799              		.file 6 "src/../h/_sem.hpp"
 800              		.file 7 "src/../h/syscall_c.hpp"
 801              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/cch4yKO8.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cch4yKO8.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cch4yKO8.s:13     .text:0000000000000000 .L0 
     /tmp/cch4yKO8.s:14     .text:0000000000000000 .L0 
     /tmp/cch4yKO8.s:15     .text:0000000000000004 .L0 
     /tmp/cch4yKO8.s:17     .text:0000000000000008 .L0 
     /tmp/cch4yKO8.s:19     .text:000000000000000c .L0 
     /tmp/cch4yKO8.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:12     .text:000000000000000c .L0 
     /tmp/cch4yKO8.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:13     .text:0000000000000010 .L0 
     /tmp/cch4yKO8.s:33     .text:0000000000000014 .L0 
     /tmp/cch4yKO8.s:34     .text:0000000000000018 .L0 
     /tmp/cch4yKO8.s:35     .text:0000000000000018 .L0 
     /tmp/cch4yKO8.s:37     .text:000000000000001c .L0 
     /tmp/cch4yKO8.s:39     .text:0000000000000020 .L0 
     /tmp/cch4yKO8.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cch4yKO8.s:48     .text:0000000000000020 .L0 
     /tmp/cch4yKO8.s:49     .text:0000000000000020 .L0 
     /tmp/cch4yKO8.s:50     .text:0000000000000024 .L0 
     /tmp/cch4yKO8.s:56     .text:0000000000000038 .L0 
     /tmp/cch4yKO8.s:57     .text:0000000000000038 .L0 
     /tmp/cch4yKO8.s:58     .text:0000000000000038 .L0 
     /tmp/cch4yKO8.s:59     .text:0000000000000038 .L0 
     /tmp/cch4yKO8.s:60     .text:0000000000000038 .L0 
     /tmp/cch4yKO8.s:62     .text:000000000000003c .L0 
     /tmp/cch4yKO8.s:64     .text:000000000000003c .L0 
     /tmp/cch4yKO8.s:65     .text:000000000000003c .L0 
       src/riscv.cpp:19     .text:000000000000003c .L0 
     /tmp/cch4yKO8.s:73     .text:0000000000000044 .L0 
       src/riscv.cpp:20     .text:0000000000000044 .L0 
     /tmp/cch4yKO8.s:81     .text:000000000000004c .L0 
       src/riscv.cpp:21     .text:000000000000004c .L0 
     /tmp/cch4yKO8.s:89     .text:0000000000000054 .L0 
       src/riscv.cpp:22     .text:0000000000000054 .L0 
     /tmp/cch4yKO8.s:97     .text:000000000000005c .L0 
       src/riscv.cpp:23     .text:000000000000005c .L0 
     /tmp/cch4yKO8.s:108    .text:0000000000000064 .L0 
     /tmp/cch4yKO8.s:109    .text:0000000000000064 .L0 
     /tmp/cch4yKO8.s:110    .text:0000000000000064 .L0 
  src/../h/riscv.hpp:97     .text:0000000000000064 .L0 
     /tmp/cch4yKO8.s:118    .text:000000000000006c .L0 
     /tmp/cch4yKO8.s:119    .text:000000000000006c .L0 
     /tmp/cch4yKO8.s:125    .text:0000000000000070 .L0 
     /tmp/cch4yKO8.s:126    .text:0000000000000070 .L0 
     /tmp/cch4yKO8.s:128    .text:0000000000000074 .L0 
     /tmp/cch4yKO8.s:134    .text:000000000000007c .L0 
     /tmp/cch4yKO8.s:139    .text:000000000000008c .L0 
     /tmp/cch4yKO8.s:144    .text:000000000000009c .L0 
     /tmp/cch4yKO8.s:145    .text:000000000000009c .L0 
     /tmp/cch4yKO8.s:150    .text:00000000000000a4 .L0 
     /tmp/cch4yKO8.s:158    .text:00000000000000a8 .L0 
     /tmp/cch4yKO8.s:159    .text:00000000000000a8 .L0 
     /tmp/cch4yKO8.s:160    .text:00000000000000a8 .L0 
  src/../h/riscv.hpp:109    .text:00000000000000a8 .L0 
     /tmp/cch4yKO8.s:168    .text:00000000000000b0 .L0 
GAS LISTING /tmp/cch4yKO8.s 			page 25


     /tmp/cch4yKO8.s:169    .text:00000000000000b0 .L0 
     /tmp/cch4yKO8.s:173    .text:00000000000000b4 .L0 
     /tmp/cch4yKO8.s:178    .text:00000000000000b8 .L0 
     /tmp/cch4yKO8.s:179    .text:00000000000000b8 .L0 
     /tmp/cch4yKO8.s:180    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:177    .text:00000000000000b8 .L0 
     /tmp/cch4yKO8.s:188    .text:00000000000000c0 .L0 
     /tmp/cch4yKO8.s:189    .text:00000000000000c0 .L0 
     /tmp/cch4yKO8.s:194    .text:00000000000000c4 .L0 
     /tmp/cch4yKO8.s:195    .text:00000000000000c4 .L0 
     /tmp/cch4yKO8.s:198    .text:00000000000000c8 .L0 
     /tmp/cch4yKO8.s:200    .text:00000000000000c8 .L0 
     /tmp/cch4yKO8.s:211    .text:00000000000000d0 .L0 
     /tmp/cch4yKO8.s:223    .text:00000000000000d8 .L0 
     /tmp/cch4yKO8.s:237    .text:00000000000000e0 .L0 
     /tmp/cch4yKO8.s:253    .text:00000000000000e8 .L0 
     /tmp/cch4yKO8.s:271    .text:00000000000000f0 .L0 
     /tmp/cch4yKO8.s:291    .text:00000000000000f8 .L0 
     /tmp/cch4yKO8.s:313    .text:0000000000000100 .L0 
     /tmp/cch4yKO8.s:337    .text:0000000000000108 .L0 
     /tmp/cch4yKO8.s:363    .text:0000000000000110 .L0 
     /tmp/cch4yKO8.s:366    .text:0000000000000118 .L0 
     /tmp/cch4yKO8.s:379    .text:0000000000000124 .L0 
     /tmp/cch4yKO8.s:380    .text:0000000000000124 .L0 
     /tmp/cch4yKO8.s:383    .text:0000000000000128 .L0 
     /tmp/cch4yKO8.s:384    .text:0000000000000128 .L0 
     /tmp/cch4yKO8.s:385    .text:0000000000000128 .L0 
     /tmp/cch4yKO8.s:386    .text:0000000000000128 .L0 
     /tmp/cch4yKO8.s:387    .text:0000000000000128 .L0 
     /tmp/cch4yKO8.s:393    .text:000000000000013c .L0 
     /tmp/cch4yKO8.s:395    .text:0000000000000140 .L0 
     /tmp/cch4yKO8.s:397    .text:0000000000000144 .L0 
     /tmp/cch4yKO8.s:398    .text:0000000000000144 .L0 
     /tmp/cch4yKO8.s:409    .text:000000000000014c .L0 
     /tmp/cch4yKO8.s:416    .text:0000000000000150 .L0 
     /tmp/cch4yKO8.s:417    .text:0000000000000150 .L0 
     /tmp/cch4yKO8.s:428    .text:0000000000000158 .L0 
     /tmp/cch4yKO8.s:436    .text:000000000000015c .L0 
     /tmp/cch4yKO8.s:437    .text:000000000000015c .L0 
     /tmp/cch4yKO8.s:445    .text:0000000000000168 .L0 
     /tmp/cch4yKO8.s:446    .text:0000000000000168 .L0 
     /tmp/cch4yKO8.s:447    .text:0000000000000168 .L0 
     /tmp/cch4yKO8.s:458    .text:0000000000000170 .L0 
     /tmp/cch4yKO8.s:459    .text:0000000000000170 .L0 
     /tmp/cch4yKO8.s:460    .text:0000000000000170 .L0 
     /tmp/cch4yKO8.s:463    .text:000000000000017c .L0 
     /tmp/cch4yKO8.s:464    .text:000000000000017c .L0 
     /tmp/cch4yKO8.s:470    .text:0000000000000184 .L0 
     /tmp/cch4yKO8.s:471    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:183    .text:0000000000000184 .L0 
     /tmp/cch4yKO8.s:483    .text:0000000000000188 .L0 
     /tmp/cch4yKO8.s:484    .text:0000000000000188 .L0 
  src/../h/riscv.hpp:115    .text:0000000000000188 .L0 
     /tmp/cch4yKO8.s:497    .text:000000000000018c .L0 
     /tmp/cch4yKO8.s:498    .text:0000000000000190 .L0 
     /tmp/cch4yKO8.s:499    .text:0000000000000190 .L0 
     /tmp/cch4yKO8.s:501    .text:0000000000000194 .L0 
GAS LISTING /tmp/cch4yKO8.s 			page 26


     /tmp/cch4yKO8.s:502    .text:0000000000000194 .L0 
     /tmp/cch4yKO8.s:504    .text:0000000000000198 .L0 
     /tmp/cch4yKO8.s:506    .text:000000000000019c .L0 
     /tmp/cch4yKO8.s:508    .text:00000000000001a0 .L0 
     /tmp/cch4yKO8.s:510    .text:00000000000001a4 .L0 
     /tmp/cch4yKO8.s:514    .text:00000000000001a8 .L0 
     /tmp/cch4yKO8.s:525    .text:00000000000001a8 .L0 
     /tmp/cch4yKO8.s:526    .text:00000000000001a8 .L0 
     /tmp/cch4yKO8.s:527    .text:00000000000001a8 .L0 
     /tmp/cch4yKO8.s:531    .text:00000000000001b4 .L0 
     /tmp/cch4yKO8.s:532    .text:00000000000001b4 .L0 
     /tmp/cch4yKO8.s:546    .text:00000000000001bc .L0 
     /tmp/cch4yKO8.s:558    .text:00000000000001c0 .L0 
     /tmp/cch4yKO8.s:559    .text:00000000000001c0 .L0 
     /tmp/cch4yKO8.s:562    .text:00000000000001c4 .L0 
     /tmp/cch4yKO8.s:563    .text:00000000000001c4 .L0 
     /tmp/cch4yKO8.s:564    .text:00000000000001c4 .L0 
     /tmp/cch4yKO8.s:568    .text:00000000000001d0 .L0 
     /tmp/cch4yKO8.s:578    .text:00000000000001d4 .L0 
     /tmp/cch4yKO8.s:592    .text:00000000000001d8 .L0 
     /tmp/cch4yKO8.s:593    .text:00000000000001d8 .L0 
     /tmp/cch4yKO8.s:594    .text:00000000000001d8 .L0 
     /tmp/cch4yKO8.s:598    .text:00000000000001e4 .L0 
       src/riscv.cpp:89     .text:00000000000001e4 .L0 
     /tmp/cch4yKO8.s:616    .text:00000000000001e8 .L0 
     /tmp/cch4yKO8.s:617    .text:00000000000001e8 .L0 
     /tmp/cch4yKO8.s:632    .text:00000000000001ec .L0 
     /tmp/cch4yKO8.s:633    .text:00000000000001ec .L0 
     /tmp/cch4yKO8.s:634    .text:00000000000001ec .L0 
     /tmp/cch4yKO8.s:638    .text:00000000000001f8 .L0 
       src/riscv.cpp:98     .text:00000000000001f8 .L0 
     /tmp/cch4yKO8.s:657    .text:00000000000001fc .L0 
     /tmp/cch4yKO8.s:658    .text:00000000000001fc .L0 
     /tmp/cch4yKO8.s:665    .text:0000000000000200 .L0 
     /tmp/cch4yKO8.s:666    .text:0000000000000200 .L0 
     /tmp/cch4yKO8.s:673    .text:0000000000000214 .L0 
     /tmp/cch4yKO8.s:674    .text:0000000000000214 .L0 
     /tmp/cch4yKO8.s:680    .text:0000000000000220 .L0 
     /tmp/cch4yKO8.s:681    .text:0000000000000220 .L0 
     /tmp/cch4yKO8.s:686    .text:0000000000000224 .L0 
     /tmp/cch4yKO8.s:693    .text:0000000000000228 .L0 
     /tmp/cch4yKO8.s:694    .text:0000000000000228 .L0 
     /tmp/cch4yKO8.s:695    .text:0000000000000228 .L0 
     /tmp/cch4yKO8.s:702    .text:0000000000000230 .L0 
     /tmp/cch4yKO8.s:712    .text:0000000000000234 .L0 
     /tmp/cch4yKO8.s:713    .text:0000000000000234 .L0 
     /tmp/cch4yKO8.s:714    .text:0000000000000234 .L0 
  src/../h/riscv.hpp:109    .text:0000000000000234 .L0 
     /tmp/cch4yKO8.s:722    .text:000000000000023c .L0 
     /tmp/cch4yKO8.s:723    .text:000000000000023c .L0 
     /tmp/cch4yKO8.s:727    .text:0000000000000240 .L0 
     /tmp/cch4yKO8.s:731    .text:0000000000000244 .L0 
     /tmp/cch4yKO8.s:732    .text:0000000000000244 .L0 
     /tmp/cch4yKO8.s:733    .text:0000000000000244 .L0 
  src/../h/riscv.hpp:177    .text:0000000000000244 .L0 
     /tmp/cch4yKO8.s:741    .text:000000000000024c .L0 
     /tmp/cch4yKO8.s:742    .text:000000000000024c .L0 
GAS LISTING /tmp/cch4yKO8.s 			page 27


     /tmp/cch4yKO8.s:746    .text:0000000000000250 .L0 
     /tmp/cch4yKO8.s:748    .text:0000000000000254 .L0 
     /tmp/cch4yKO8.s:749    .text:0000000000000254 .L0 
     /tmp/cch4yKO8.s:752    .text:0000000000000260 .L0 
     /tmp/cch4yKO8.s:753    .text:0000000000000260 .L0 
     /tmp/cch4yKO8.s:756    .text:0000000000000268 .L0 
     /tmp/cch4yKO8.s:757    .text:0000000000000268 .L0 
     /tmp/cch4yKO8.s:762    .text:000000000000026c .L0 
  src/../h/riscv.hpp:183    .text:000000000000026c .L0 
     /tmp/cch4yKO8.s:772    .text:0000000000000270 .L0 
     /tmp/cch4yKO8.s:773    .text:0000000000000270 .L0 
     /tmp/cch4yKO8.s:778    .text:0000000000000274 .L0 
  src/../h/riscv.hpp:115    .text:0000000000000274 .L0 
     /tmp/cch4yKO8.s:785    .text:0000000000000278 .L0 
     /tmp/cch4yKO8.s:793    .text:000000000000027c .L0 
     /tmp/cch4yKO8.s:802    .text:000000000000027c .L0 
     /tmp/cch4yKO8.s:437    .text:000000000000015c .L0 
     /tmp/cch4yKO8.s:460    .text:0000000000000170 .L0 
     /tmp/cch4yKO8.s:666    .text:0000000000000200 .L0 
     /tmp/cch4yKO8.s:674    .text:0000000000000214 .L0 
     /tmp/cch4yKO8.s:749    .text:0000000000000254 .L0 
     /tmp/cch4yKO8.s:152    .text:00000000000000a8 .L18
     /tmp/cch4yKO8.s:660    .text:0000000000000200 .L19
     /tmp/cch4yKO8.s:491    .text:000000000000018c .L3
     /tmp/cch4yKO8.s:457    .text:0000000000000170 .L5
     /tmp/cch4yKO8.s:369    .text:0000000000000124 .L20
     /tmp/cch4yKO8.s:430    .text:000000000000015c .L21
     /tmp/cch4yKO8.s:513    .text:00000000000001a8 .L22
     /tmp/cch4yKO8.s:548    .text:00000000000001c0 .L23
     /tmp/cch4yKO8.s:580    .text:00000000000001d8 .L24
     /tmp/cch4yKO8.s:619    .text:00000000000001ec .L25
     /tmp/cch4yKO8.s:466    .text:0000000000000184 .L12
     /tmp/cch4yKO8.s:410    .text:0000000000000150 .L7
     /tmp/cch4yKO8.s:704    .text:0000000000000234 .L26
     /tmp/cch4yKO8.s:688    .text:0000000000000228 .L16
     /tmp/cch4yKO8.s:2284   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cch4yKO8.s:3918   .debug_str:00000000000006e6 .LASF140
     /tmp/cch4yKO8.s:3860   .debug_str:000000000000056e .LASF141
     /tmp/cch4yKO8.s:3750   .debug_str:000000000000027a .LASF142
     /tmp/cch4yKO8.s:5      .text:0000000000000000 .Ltext0
     /tmp/cch4yKO8.s:796    .text:000000000000027c .Letext0
     /tmp/cch4yKO8.s:3658   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cch4yKO8.s:3834   .debug_str:00000000000004dd .LASF0
     /tmp/cch4yKO8.s:3854   .debug_str:0000000000000541 .LASF1
     /tmp/cch4yKO8.s:3820   .debug_str:000000000000047d .LASF2
     /tmp/cch4yKO8.s:3780   .debug_str:000000000000037b .LASF4
     /tmp/cch4yKO8.s:3894   .debug_str:0000000000000642 .LASF3
     /tmp/cch4yKO8.s:3694   .debug_str:00000000000000d6 .LASF5
     /tmp/cch4yKO8.s:3858   .debug_str:000000000000055b .LASF6
     /tmp/cch4yKO8.s:3832   .debug_str:00000000000004ca .LASF7
     /tmp/cch4yKO8.s:3932   .debug_str:00000000000007f1 .LASF8
     /tmp/cch4yKO8.s:3764   .debug_str:00000000000002e4 .LASF9
     /tmp/cch4yKO8.s:3872   .debug_str:00000000000005b3 .LASF10
     /tmp/cch4yKO8.s:3922   .debug_str:00000000000007b6 .LASF11
     /tmp/cch4yKO8.s:3698   .debug_str:00000000000000e8 .LASF12
     /tmp/cch4yKO8.s:3668   .debug_str:0000000000000049 .LASF13
     /tmp/cch4yKO8.s:3710   .debug_str:0000000000000141 .LASF14
GAS LISTING /tmp/cch4yKO8.s 			page 28


     /tmp/cch4yKO8.s:3888   .debug_str:000000000000060e .LASF15
     /tmp/cch4yKO8.s:3724   .debug_str:0000000000000190 .LASF16
     /tmp/cch4yKO8.s:3850   .debug_str:0000000000000530 .LASF60
     /tmp/cch4yKO8.s:3796   .debug_str:00000000000003f5 .LASF79
     /tmp/cch4yKO8.s:3904   .debug_str:0000000000000684 .LASF17
     /tmp/cch4yKO8.s:3848   .debug_str:0000000000000527 .LASF18
     /tmp/cch4yKO8.s:3788   .debug_str:00000000000003a7 .LASF19
     /tmp/cch4yKO8.s:3886   .debug_str:0000000000000603 .LASF20
     /tmp/cch4yKO8.s:3954   .debug_str:00000000000008b0 .LASF22
     /tmp/cch4yKO8.s:3688   .debug_str:00000000000000b8 .LASF21
     /tmp/cch4yKO8.s:3738   .debug_str:0000000000000216 .LASF23
     /tmp/cch4yKO8.s:3906   .debug_str:000000000000068d .LASF24
     /tmp/cch4yKO8.s:3666   .debug_str:000000000000002f .LASF25
     /tmp/cch4yKO8.s:3670   .debug_str:0000000000000059 .LASF26
     /tmp/cch4yKO8.s:3742   .debug_str:0000000000000239 .LASF28
     /tmp/cch4yKO8.s:3736   .debug_str:000000000000020d .LASF30
     /tmp/cch4yKO8.s:3734   .debug_str:00000000000001f8 .LASF32
     /tmp/cch4yKO8.s:3898   .debug_str:0000000000000665 .LASF27
     /tmp/cch4yKO8.s:3874   .debug_str:00000000000005c2 .LASF29
     /tmp/cch4yKO8.s:3916   .debug_str:00000000000006df .LASF31
     /tmp/cch4yKO8.s:3910   .debug_str:00000000000006a1 .LASF33
     /tmp/cch4yKO8.s:3754   .debug_str:00000000000002ab .LASF34
     /tmp/cch4yKO8.s:3726   .debug_str:00000000000001a6 .LASF35
     /tmp/cch4yKO8.s:3662   .debug_str:0000000000000009 .LASF36
     /tmp/cch4yKO8.s:3770   .debug_str:000000000000031f .LASF37
     /tmp/cch4yKO8.s:3692   .debug_str:00000000000000ce .LASF38
     /tmp/cch4yKO8.s:3702   .debug_str:00000000000000fd .LASF39
     /tmp/cch4yKO8.s:3960   .debug_str:00000000000008d8 .LASF40
     /tmp/cch4yKO8.s:3744   .debug_str:000000000000024e .LASF41
     /tmp/cch4yKO8.s:3836   .debug_str:00000000000004ea .LASF42
     /tmp/cch4yKO8.s:3950   .debug_str:000000000000087b .LASF43
     /tmp/cch4yKO8.s:3684   .debug_str:00000000000000a8 .LASF44
     /tmp/cch4yKO8.s:3752   .debug_str:0000000000000298 .LASF45
     /tmp/cch4yKO8.s:3760   .debug_str:00000000000002d6 .LASF46
     /tmp/cch4yKO8.s:3914   .debug_str:00000000000006cd .LASF47
     /tmp/cch4yKO8.s:3680   .debug_str:0000000000000085 .LASF48
     /tmp/cch4yKO8.s:3966   .debug_str:00000000000008fc .LASF49
     /tmp/cch4yKO8.s:3958   .debug_str:00000000000008cd .LASF50
     /tmp/cch4yKO8.s:3892   .debug_str:000000000000062a .LASF51
     /tmp/cch4yKO8.s:3852   .debug_str:0000000000000536 .LASF52
     /tmp/cch4yKO8.s:3806   .debug_str:000000000000042e .LASF53
     /tmp/cch4yKO8.s:3708   .debug_str:0000000000000137 .LASF54
     /tmp/cch4yKO8.s:3774   .debug_str:0000000000000338 .LASF55
     /tmp/cch4yKO8.s:3824   .debug_str:0000000000000497 .LASF56
     /tmp/cch4yKO8.s:3766   .debug_str:00000000000002f2 .LASF57
     /tmp/cch4yKO8.s:3900   .debug_str:000000000000066c .LASF58
     /tmp/cch4yKO8.s:3704   .debug_str:0000000000000111 .LASF59
     /tmp/cch4yKO8.s:3936   .debug_str:000000000000080b .LASF107
     /tmp/cch4yKO8.s:3792   .debug_str:00000000000003b8 .LASF109
     /tmp/cch4yKO8.s:3808   .debug_str:0000000000000446 .LASF61
     /tmp/cch4yKO8.s:3810   .debug_str:0000000000000450 .LASF143
     /tmp/cch4yKO8.s:3728   .debug_str:00000000000001ba .LASF62
     /tmp/cch4yKO8.s:3814   .debug_str:0000000000000462 .LASF63
     /tmp/cch4yKO8.s:3778   .debug_str:0000000000000376 .LASF64
     /tmp/cch4yKO8.s:3840   .debug_str:00000000000004fa .LASF66
     /tmp/cch4yKO8.s:3782   .debug_str:0000000000000382 .LASF71
     /tmp/cch4yKO8.s:3828   .debug_str:00000000000004b1 .LASF144
GAS LISTING /tmp/cch4yKO8.s 			page 29


     /tmp/cch4yKO8.s:3768   .debug_str:0000000000000308 .LASF145
     /tmp/cch4yKO8.s:3686   .debug_str:00000000000000af .LASF65
     /tmp/cch4yKO8.s:3732   .debug_str:00000000000001db .LASF67
     /tmp/cch4yKO8.s:3762   .debug_str:00000000000002dc .LASF68
     /tmp/cch4yKO8.s:3730   .debug_str:00000000000001bf .LASF69
     /tmp/cch4yKO8.s:3920   .debug_str:00000000000007aa .LASF70
     /tmp/cch4yKO8.s:3664   .debug_str:0000000000000011 .LASF72
     /tmp/cch4yKO8.s:3706   .debug_str:000000000000012d .LASF73
     /tmp/cch4yKO8.s:3794   .debug_str:00000000000003da .LASF74
     /tmp/cch4yKO8.s:3842   .debug_str:000000000000050d .LASF75
     /tmp/cch4yKO8.s:3682   .debug_str:000000000000008b .LASF76
     /tmp/cch4yKO8.s:3800   .debug_str:0000000000000411 .LASF77
     /tmp/cch4yKO8.s:3948   .debug_str:0000000000000861 .LASF78
     /tmp/cch4yKO8.s:3924   .debug_str:00000000000007c5 .LASF80
     /tmp/cch4yKO8.s:3938   .debug_str:0000000000000820 .LASF81
     /tmp/cch4yKO8.s:3870   .debug_str:00000000000005ad .LASF82
     /tmp/cch4yKO8.s:3868   .debug_str:00000000000005a5 .LASF83
     /tmp/cch4yKO8.s:3902   .debug_str:000000000000067b .LASF84
     /tmp/cch4yKO8.s:3690   .debug_str:00000000000000c6 .LASF85
     /tmp/cch4yKO8.s:3674   .debug_str:0000000000000069 .LASF146
     /tmp/cch4yKO8.s:3772   .debug_str:0000000000000333 .LASF86
     /tmp/cch4yKO8.s:3876   .debug_str:00000000000005d5 .LASF87
     /tmp/cch4yKO8.s:3862   .debug_str:000000000000057c .LASF88
     /tmp/cch4yKO8.s:3718   .debug_str:000000000000015e .LASF89
     /tmp/cch4yKO8.s:3822   .debug_str:000000000000048b .LASF90
     /tmp/cch4yKO8.s:3962   .debug_str:00000000000008e0 .LASF91
     /tmp/cch4yKO8.s:3678   .debug_str:000000000000007e .LASF92
     /tmp/cch4yKO8.s:3798   .debug_str:0000000000000400 .LASF93
     /tmp/cch4yKO8.s:3812   .debug_str:0000000000000455 .LASF94
     /tmp/cch4yKO8.s:3912   .debug_str:00000000000006b4 .LASF95
     /tmp/cch4yKO8.s:3722   .debug_str:0000000000000183 .LASF96
     /tmp/cch4yKO8.s:3952   .debug_str:000000000000088e .LASF97
     /tmp/cch4yKO8.s:3880   .debug_str:00000000000005e9 .LASF147
     /tmp/cch4yKO8.s:3890   .debug_str:0000000000000624 .LASF98
     /tmp/cch4yKO8.s:3826   .debug_str:00000000000004a1 .LASF99
     /tmp/cch4yKO8.s:3816   .debug_str:0000000000000467 .LASF100
     /tmp/cch4yKO8.s:3818   .debug_str:000000000000046d .LASF101
     /tmp/cch4yKO8.s:3740   .debug_str:0000000000000231 .LASF148
     /tmp/cch4yKO8.s:3866   .debug_str:000000000000058e .LASF149
     /tmp/cch4yKO8.s:3786   .debug_str:00000000000003a2 .LASF102
     /tmp/cch4yKO8.s:3714   .debug_str:0000000000000152 .LASF103
     /tmp/cch4yKO8.s:3790   .debug_str:00000000000003b0 .LASF104
     /tmp/cch4yKO8.s:3846   .debug_str:000000000000051d .LASF105
     /tmp/cch4yKO8.s:3856   .debug_str:0000000000000554 .LASF106
     /tmp/cch4yKO8.s:3720   .debug_str:0000000000000175 .LASF150
     /tmp/cch4yKO8.s:3776   .debug_str:000000000000034e .LASF151
     /tmp/cch4yKO8.s:3838   .debug_str:00000000000004f1 .LASF108
     /tmp/cch4yKO8.s:3746   .debug_str:0000000000000262 .LASF110
     /tmp/cch4yKO8.s:3896   .debug_str:0000000000000654 .LASF152
     /tmp/cch4yKO8.s:3802   .debug_str:000000000000041a .LASF111
     /tmp/cch4yKO8.s:3940   .debug_str:0000000000000828 .LASF112
     /tmp/cch4yKO8.s:3696   .debug_str:00000000000000dd .LASF113
     /tmp/cch4yKO8.s:3942   .debug_str:0000000000000841 .LASF114
     /tmp/cch4yKO8.s:3748   .debug_str:0000000000000275 .LASF115
     /tmp/cch4yKO8.s:3946   .debug_str:000000000000085c .LASF116
     /tmp/cch4yKO8.s:3926   .debug_str:00000000000007cc .LASF117
     /tmp/cch4yKO8.s:3676   .debug_str:0000000000000071 .LASF118
GAS LISTING /tmp/cch4yKO8.s 			page 30


     /tmp/cch4yKO8.s:3934   .debug_str:0000000000000801 .LASF119
     /tmp/cch4yKO8.s:3758   .debug_str:00000000000002c1 .LASF120
     /tmp/cch4yKO8.s:3700   .debug_str:00000000000000f8 .LASF121
     /tmp/cch4yKO8.s:3884   .debug_str:00000000000005f3 .LASF122
     /tmp/cch4yKO8.s:3864   .debug_str:0000000000000587 .LASF123
     /tmp/cch4yKO8.s:3928   .debug_str:00000000000007d2 .LASF124
     /tmp/cch4yKO8.s:3930   .debug_str:00000000000007e4 .LASF125
     /tmp/cch4yKO8.s:3804   .debug_str:0000000000000428 .LASF126
     /tmp/cch4yKO8.s:3660   .debug_str:0000000000000000 .LASF127
     /tmp/cch4yKO8.s:3716   .debug_str:0000000000000158 .LASF128
     /tmp/cch4yKO8.s:46     .text:0000000000000020 .LFB41
     /tmp/cch4yKO8.s:794    .text:000000000000027c .LFE41
     /tmp/cch4yKO8.s:3956   .debug_str:00000000000008c8 .LASF129
     /tmp/cch4yKO8.s:3672   .debug_str:0000000000000062 .LASF130
     /tmp/cch4yKO8.s:3308   .debug_loc:0000000000000000 .LLST0
     /tmp/cch4yKO8.s:3626   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cch4yKO8.s:3844   .debug_str:0000000000000518 .LASF131
     /tmp/cch4yKO8.s:3371   .debug_loc:00000000000000f1 .LLST4
     /tmp/cch4yKO8.s:3878   .debug_str:00000000000005e1 .LASF132
     /tmp/cch4yKO8.s:3382   .debug_loc:0000000000000127 .LLST5
     /tmp/cch4yKO8.s:3393   .debug_loc:000000000000015d .LLST6
     /tmp/cch4yKO8.s:3830   .debug_str:00000000000004bb .LASF133
     /tmp/cch4yKO8.s:3450   .debug_loc:000000000000025d .LLST7
     /tmp/cch4yKO8.s:3908   .debug_str:000000000000069a .LASF134
     /tmp/cch4yKO8.s:3478   .debug_loc:00000000000002d1 .LLST17
     /tmp/cch4yKO8.s:3756   .debug_str:00000000000002b3 .LASF135
     /tmp/cch4yKO8.s:3485   .debug_loc:00000000000002f4 .LLST18
     /tmp/cch4yKO8.s:3493   .debug_loc:0000000000000319 .LLST19
     /tmp/cch4yKO8.s:3501   .debug_loc:000000000000033d .LLST20
     /tmp/cch4yKO8.s:391    .text:000000000000013c .LVL8
     /tmp/cch4yKO8.s:523    .text:00000000000001a8 .LBB96
     /tmp/cch4yKO8.s:538    .text:00000000000001bc .LBE96
     /tmp/cch4yKO8.s:3509   .debug_loc:0000000000000361 .LLST14
     /tmp/cch4yKO8.s:529    .text:00000000000001b4 .LVL17
     /tmp/cch4yKO8.s:556    .text:00000000000001c0 .LBB90
     /tmp/cch4yKO8.s:569    .text:00000000000001d4 .LBE90
     /tmp/cch4yKO8.s:3517   .debug_loc:0000000000000386 .LLST12
     /tmp/cch4yKO8.s:3964   .debug_str:00000000000008f7 .LASF136
     /tmp/cch4yKO8.s:3524   .debug_loc:00000000000003a9 .LLST13
     /tmp/cch4yKO8.s:566    .text:00000000000001d0 .LVL20
     /tmp/cch4yKO8.s:590    .text:00000000000001d8 .LBB83
     /tmp/cch4yKO8.s:606    .text:00000000000001e8 .LBE83
     /tmp/cch4yKO8.s:3532   .debug_loc:00000000000003ce .LLST10
     /tmp/cch4yKO8.s:3540   .debug_loc:00000000000003f3 .LLST11
     /tmp/cch4yKO8.s:596    .text:00000000000001e4 .LVL22
     /tmp/cch4yKO8.s:630    .text:00000000000001ec .LBB82
     /tmp/cch4yKO8.s:646    .text:00000000000001fc .LBE82
     /tmp/cch4yKO8.s:3547   .debug_loc:0000000000000416 .LLST8
     /tmp/cch4yKO8.s:3555   .debug_loc:000000000000043b .LLST9
     /tmp/cch4yKO8.s:636    .text:00000000000001f8 .LVL25
     /tmp/cch4yKO8.s:156    .text:00000000000000a8 .LBB68
     /tmp/cch4yKO8.s:171    .text:00000000000000b4 .LBE68
     /tmp/cch4yKO8.s:176    .text:00000000000000b8 .LBB70
     /tmp/cch4yKO8.s:192    .text:00000000000000c4 .LBE70
     /tmp/cch4yKO8.s:441    .text:0000000000000168 .LBB113
     /tmp/cch4yKO8.s:451    .text:0000000000000170 .LBE113
     /tmp/cch4yKO8.s:3562   .debug_loc:000000000000045e .LLST15
GAS LISTING /tmp/cch4yKO8.s 			page 31


     /tmp/cch4yKO8.s:3570   .debug_loc:0000000000000482 .LLST16
     /tmp/cch4yKO8.s:468    .text:0000000000000184 .LBB170
     /tmp/cch4yKO8.s:479    .text:0000000000000188 .LBE170
     /tmp/cch4yKO8.s:3577   .debug_loc:00000000000004a5 .LLST21
     /tmp/cch4yKO8.s:481    .text:0000000000000188 .LBB172
     /tmp/cch4yKO8.s:493    .text:000000000000018c .LBE172
     /tmp/cch4yKO8.s:3584   .debug_loc:00000000000004c8 .LLST22
     /tmp/cch4yKO8.s:465    .text:0000000000000184 .LVL13
     /tmp/cch4yKO8.s:708    .text:0000000000000234 .LBB55
     /tmp/cch4yKO8.s:788    .text:000000000000027c .LBE55
     /tmp/cch4yKO8.s:710    .text:0000000000000234 .LBB56
     /tmp/cch4yKO8.s:725    .text:0000000000000240 .LBE56
     /tmp/cch4yKO8.s:729    .text:0000000000000244 .LBB58
     /tmp/cch4yKO8.s:744    .text:0000000000000250 .LBE58
     /tmp/cch4yKO8.s:759    .text:000000000000026c .LBB60
     /tmp/cch4yKO8.s:770    .text:0000000000000270 .LBE60
     /tmp/cch4yKO8.s:3591   .debug_loc:00000000000004eb .LLST2
     /tmp/cch4yKO8.s:775    .text:0000000000000274 .LBB62
     /tmp/cch4yKO8.s:787    .text:000000000000027c .LBE62
     /tmp/cch4yKO8.s:754    .text:0000000000000268 .LVL33
     /tmp/cch4yKO8.s:105    .text:0000000000000064 .LBB47
     /tmp/cch4yKO8.s:122    .text:0000000000000070 .LBE47
     /tmp/cch4yKO8.s:677    .text:0000000000000220 .LBB53
     /tmp/cch4yKO8.s:684    .text:0000000000000224 .LBE53
     /tmp/cch4yKO8.s:3598   .debug_loc:000000000000050e .LLST1
     /tmp/cch4yKO8.s:691    .text:0000000000000228 .LBB64
     /tmp/cch4yKO8.s:706    .text:0000000000000234 .LBE64
     /tmp/cch4yKO8.s:3605   .debug_loc:0000000000000531 .LLST3
     /tmp/cch4yKO8.s:146    .text:00000000000000a4 .LVL1
     /tmp/cch4yKO8.s:10     .text:0000000000000000 .LFB40
     /tmp/cch4yKO8.s:40     .text:0000000000000020 .LFE40
     /tmp/cch4yKO8.s:3882   .debug_str:00000000000005ee .LASF137
     /tmp/cch4yKO8.s:3784   .debug_str:0000000000000399 .LASF138
     /tmp/cch4yKO8.s:3712   .debug_str:000000000000014d .LASF139
     /tmp/cch4yKO8.s:3944   .debug_str:000000000000084c .LASF153
     /tmp/cch4yKO8.s:120    .text:0000000000000070 .LVL0
     /tmp/cch4yKO8.s:151    .text:00000000000000a8 .LVL2
     /tmp/cch4yKO8.s:201    .text:00000000000000cc .LVL6
     /tmp/cch4yKO8.s:429    .text:000000000000015c .LVL9
     /tmp/cch4yKO8.s:449    .text:0000000000000170 .LVL12
     /tmp/cch4yKO8.s:512    .text:00000000000001a8 .LVL16
     /tmp/cch4yKO8.s:547    .text:00000000000001c0 .LVL18
     /tmp/cch4yKO8.s:579    .text:00000000000001d8 .LVL21
     /tmp/cch4yKO8.s:618    .text:00000000000001ec .LVL24
     /tmp/cch4yKO8.s:659    .text:0000000000000200 .LVL27
     /tmp/cch4yKO8.s:667    .text:0000000000000208 .LVL28
     /tmp/cch4yKO8.s:687    .text:0000000000000228 .LVL31
     /tmp/cch4yKO8.s:703    .text:0000000000000234 .LVL32
     /tmp/cch4yKO8.s:174    .text:00000000000000b8 .LVL3
     /tmp/cch4yKO8.s:489    .text:000000000000018c .LVL15
     /tmp/cch4yKO8.s:190    .text:00000000000000c4 .LVL4
     /tmp/cch4yKO8.s:196    .text:00000000000000c8 .LVL5
     /tmp/cch4yKO8.s:438    .text:0000000000000164 .LVL10
     /tmp/cch4yKO8.s:604    .text:00000000000001e8 .LVL23
     /tmp/cch4yKO8.s:644    .text:00000000000001fc .LVL26
     /tmp/cch4yKO8.s:381    .text:0000000000000128 .LVL7
     /tmp/cch4yKO8.s:560    .text:00000000000001c4 .LVL19
GAS LISTING /tmp/cch4yKO8.s 			page 32


     /tmp/cch4yKO8.s:440    .text:0000000000000168 .LVL11
     /tmp/cch4yKO8.s:476    .text:0000000000000188 .LVL14
     /tmp/cch4yKO8.s:758    .text:000000000000026c .LVL34
     /tmp/cch4yKO8.s:767    .text:0000000000000270 .LVL35
     /tmp/cch4yKO8.s:676    .text:0000000000000220 .LVL29
     /tmp/cch4yKO8.s:682    .text:0000000000000224 .LVL30
     /tmp/cch4yKO8.s:803    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cch4yKO8.s:154    .text:00000000000000a8 .LBB67
     /tmp/cch4yKO8.s:204    .text:00000000000000d0 .LBE67
     /tmp/cch4yKO8.s:208    .text:00000000000000d0 .LBB178
     /tmp/cch4yKO8.s:215    .text:00000000000000d8 .LBE178
     /tmp/cch4yKO8.s:219    .text:00000000000000d8 .LBB179
     /tmp/cch4yKO8.s:228    .text:00000000000000e0 .LBE179
     /tmp/cch4yKO8.s:232    .text:00000000000000e0 .LBB180
     /tmp/cch4yKO8.s:243    .text:00000000000000e8 .LBE180
     /tmp/cch4yKO8.s:247    .text:00000000000000e8 .LBB181
     /tmp/cch4yKO8.s:260    .text:00000000000000f0 .LBE181
     /tmp/cch4yKO8.s:264    .text:00000000000000f0 .LBB182
     /tmp/cch4yKO8.s:279    .text:00000000000000f8 .LBE182
     /tmp/cch4yKO8.s:283    .text:00000000000000f8 .LBB183
     /tmp/cch4yKO8.s:300    .text:0000000000000100 .LBE183
     /tmp/cch4yKO8.s:304    .text:0000000000000100 .LBB184
     /tmp/cch4yKO8.s:323    .text:0000000000000108 .LBE184
     /tmp/cch4yKO8.s:327    .text:0000000000000108 .LBB185
     /tmp/cch4yKO8.s:348    .text:0000000000000110 .LBE185
     /tmp/cch4yKO8.s:352    .text:0000000000000110 .LBB186
     /tmp/cch4yKO8.s:494    .text:000000000000018c .LBE186
     /tmp/cch4yKO8.s:516    .text:00000000000001a8 .LBB187
     /tmp/cch4yKO8.s:661    .text:0000000000000200 .LBE187
     /tmp/cch4yKO8.s:377    .text:0000000000000124 .LBB125
     /tmp/cch4yKO8.s:404    .text:000000000000014c .LBE125
     /tmp/cch4yKO8.s:414    .text:0000000000000150 .LBB126
     /tmp/cch4yKO8.s:423    .text:0000000000000158 .LBE126

UNDEFINED SYMBOLS
console_handler
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB7runningE
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB5startEv
_ZN4_sem9createSemEi
_ZN4_sem4waitEv
_ZN4_sem6signalEv
